- name: Install python3-debian
  ansible.builtin.apt:
    name: python3-debian

- name: Add unifi repository
  ansible.builtin.deb822_repository:
    name: unifi
    types: deb
    uris: https://www.ui.com/downloads/unifi/debian
    suites: stable
    components: ubiquiti
    signed_by: https://dl.ui.com/unifi/unifi-repo.gpg
  ignore_errors: "{{ ansible_check_mode }}"
  register: unifi_repo

# Only for Ubuntu focal is an ARM64 version of MongoDB available
# All MongoDB versions >4.4 require a newer CPU
- name: Add mongodb repository
  ansible.builtin.deb822_repository:
    name: mongodb
    types: deb
    uris: https://repo.mongodb.org/apt/ubuntu
    suites: "focal/mongodb-org/4.4"
    components: multiverse
    signed_by: https://www.mongodb.org/static/pgp/server-4.4.asc
  ignore_errors: "{{ ansible_check_mode }}"
  register: mongodb_repo

- name: Refresh apt cache
  ansible.builtin.apt:
    update_cache: true
  when: unifi_repo.changed or mongodb_repo.changed # noqa: no-handler

# All versions >4.4.18 doesn't work, so we have to pin it to 4.4.18
- name: Install mongodb as a requirement for unifi network application
  ansible.builtin.package:
    name: mongodb-org-server=4.4.18
    state: present
  ignore_errors: "{{ ansible_check_mode }}"

- name: Pin mongodb, to disable updates
  ansible.builtin.dpkg_selections:
    name: mongodb-org-server
    selection: hold

- name: Make sure, mongodb service is started
  ansible.builtin.systemd:
    name: mongod.service
    enabled: true
    state: started

- name: Install unifi network application
  ansible.builtin.package:
    name: unifi
    state: present
  ignore_errors: "{{ ansible_check_mode }}"

- name: Create/update dns entry
  community.general.cloudflare_dns:
    zone: ohr-mit-n.net
    record: unifi
    type: A
    value: "{{ ansible_host }}"
    solo: true
    api_token: "{{ cloudflare_api_token }}"

- name: Ship caddy config
  ansible.builtin.copy:
    dest: "/etc/caddy/sites/{{ item.service }}"
    content: |2
      unifi.ohr-mit-n.net:443 {
        reverse_proxy :8443 {
          transport http {
            tls
            tls_insecure_skip_verify
          }
        }
      }
    owner: root
    group: caddy
    mode: "0640"
  loop:
    - { service: "unifi", from: "unifi.ohr-mit-n.net", to: ":8443" }
  notify: Reload caddy
