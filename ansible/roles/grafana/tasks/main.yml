- name: Make sure, grafana dirs exists
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: 472
    group: 472
  loop:
    - /etc/grafana
    - /etc/grafana/provisioning
    - /etc/grafana/provisioning/dashboards
    - /etc/grafana/provisioning/datasources
    - /opt/grafana
    - /opt/grafana/data
    - /opt/grafana/dashboards
    - /opt/grafana/plugins

- name: Deploy grafana config
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "/etc/grafana/{{ item }}"
    owner: 472
    group: 472
    mode: '0440'
  loop:
    - grafana.ini
  no_log: true
  notify: Restart grafana

- name: Add prometheus datasources
  ansible.builtin.template:
    src: "datasource.yml"
    dest: "/etc/grafana/provisioning/datasources/config.yml"
    owner: 472
    group: 472
    mode: '0440'
  notify: Restart grafana

- name: Add dashboard datasources
  ansible.builtin.copy:
    src: provisioning/dashboards/
    dest: /etc/grafana/provisioning/dashboards/
    mode: "0440"
    owner: 472
    group: 472
  notify: Restart grafana

- name: Deploy dashboards
  ansible.builtin.copy:
    src: dashboards/
    dest: /opt/grafana/dashboards/
    mode: "0440"
    directory_mode: "0770"
    owner: 472
    group: 472

- name: Deploy container manifest
  ansible.builtin.template:
    src: grafana.yml
    dest: /opt/kubelet/manifests/grafana.yml
    owner: root
    group: root
    mode: "0444"

- name: Wait for container to come up
  ansible.builtin.command:
    cmd: crictl ps -q --name grafana
  register: grafana_container
  until: grafana_container.stdout != ""
  delay: 10
  retries: 100
  changed_when: false
  when: not ansible_check_mode

- name: Create/update dns entry
  community.general.cloudflare_dns:
    zone: ohr-mit-n.net
    record: grafana
    type: A
    value: "{{ ansible_host }}"
    solo: true
    api_token: "{{ cloudflare_api_token }}"

- name: Ship caddy config
  ansible.builtin.copy:
    dest: "/etc/caddy/sites/{{ item.service }}"
    content: |2
      {{ item.from }}:443 {
        reverse_proxy {{ item.to }}
      }
    owner: root
    group: caddy
    mode: "0640"
  loop:
    - { service: "grafana", from: "grafana.ohr-mit-n.net", to: ":3000" }
  notify: Reload caddy

# It has to be done manually
# - name: Install grafana windrose plugin
#   community.grafana.grafana_plugin:
#     name: fatcloud-windrose-panel
#     version: latest
#     state: present
#     grafana_plugins_dir: /opt/grafana/plugins
